name: build tracing
on: push
defaults:
  run:
    shell: bash
jobs:
  push_tracing:
    name: deploy tracing
    runs-on: ubuntu-latest

    concurrency:
      group: ci-pipeline-${{ github.ref }}
      cancel-in-progress: true

    permissions:
      id-token: write  # Allow OIDC token access
      contents: read   # Allow reading repository contents

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetches all history for all tags and branches

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH  # Ensure uv is in PATH

      - name: Set up Python environment
        run: |
          uv venv .venv --python=3.13  # Change version if needed
          source .venv/bin/activate

      - name: Install dependencies
        run: |
          source .venv/bin/activate
          uv pip install build twine

      - name: Update version
        run: ./update_version.py

      - name: Build package
        run: |
          source .venv/bin/activate
          uv build

      - name: Push package
        run: |
          source .venv/bin/activate
          twine upload --repository pypi dist/*.whl
        env:
          PYPI_USERNAME: ${{ secrets.TWINE_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

      - name: Build layer artefact
        run: |
          mkdir -p python
          cp requirements.txt python/
          docker run -v ./python:/var/task/python m4rkw/python312-build:latest
          zip -9r python.zip python/

      - name: Push lambda layer
        run: |
          aws lambda publish-layer-version --layer-name lambda_monitoring --zip-file fileb://python.zip --compatible-runtimes python3.12
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1

      - name: Clean up old versions
        run: |
          ./cleanup_layers.py
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1
